// Copyright 2015 Google Inc.
//
//  Licensed under the Apache License, Version 2.0 (the "License");
//  you may not use this file except in compliance with the License.
//  You may obtain a copy of the License at
//
//        http://www.apache.org/licenses/LICENSE-2.0
//
//  Unless required by applicable law or agreed to in writing, software
//  distributed under the License is distributed on an "AS IS" BASIS,
//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//  See the License for the specific language governing permissions and
//  limitations under the License.
// [START gradle]
buildscript {    // Configuration for building
  repositories {
    jcenter()    // Bintray's repository - a fast Maven Central mirror & more
    mavenCentral()
  }
  dependencies {
    classpath 'com.google.cloud.tools:appengine-gradle-plugin:1.3.2+'    // latest App Engine Gradle tasks
  }
}

repositories {   // repositories for Jar's you access in your code
  maven {
    url 'https://maven-central.storage.googleapis.com'             // Google's mirror of Maven Central
//   url 'https://oss.sonatype.org/content/repositories/snapshots' // SNAPSHOT Repository (if needed)
  }
  jcenter()
  mavenCentral()
}

apply plugin: 'java'                              // standard Java tasks
apply plugin: 'war'                               // standard Web Archive plugin
apply plugin: 'com.google.cloud.tools.appengine'  // App Engine tasks

dependencies {
  providedCompile group: 'javax.servlet', name: 'servlet-api', version:'2.5'
  compile 'com.google.appengine:appengine:+'

  // Add your dependencies here.
  compile 'org.springframework:spring-webmvc:+' //spring MVC (el + indica la última versión)
  // las siguientes tres líneas son para Objectify
  compile 'com.google.appengine:appengine-endpoints:1.9.28' //add this line to avoid upper comment
  compile 'com.google.guava:guava:19.0'//add this
  compile 'com.googlecode.objectify:objectify:5.1.17'  //works with ObjectifyFilter in web.xml
}

// [START model]
appengine {  // App Engine tasks configuration
  run {      // local (dev_appserver) configuration (standard environments only)
    port = 8080                 // default
    //para especificar un datastore en otro sitio
    //para que funcione el hot reload
    //linux
    //jvmFlags = ["-Ddatastore.backing_store=/home/gustavo/temp/local_db.bin", "-Dappengine.fullscan.seconds=5"]
    //windows
    jvmFlags = ["-Ddatastore.backing_store=C:/temp/local_db.bin", "-Dappengine.fullscan.seconds=5"]
  }

  deploy {   // deploy configuration
    stopPreviousVersion = true  // default - stop the current version
    promote = true              // default - & make this the current version
  }
}
// [END model]

group = 'com.example.appengine'   // Generated output GroupId
version = '1.0-SNAPSHOT'          // Version in generated output

sourceCompatibility = 1.7  // App Engine Standard uses Java 7
targetCompatibility = 1.7  // App Engine Standard uses Java 7

//para que funcione el hot reload
task reloadApp(type: Copy) {
  dependsOn war

  project.afterEvaluate {
    into project.tasks.explodeWar.explodedAppDirectory
     with war
  }
}
// [END gradle]
